			if (args[0].equalsIgnoreCase("join")) {
				if (args.length > 1) {
					if (!myGuilds.findGuild(args[1])) {
						this.plugin.info(player, langUtils.getString(Messages.HYPHEN));
						this.plugin.info(player, langUtils.getString(langUtils.getString("Exceptions.Guild-Not-Found").replace("%NAME%", args[1].toUpperCase())));
						this.plugin.info(player, langUtils.getString(Messages.HYPHEN));
						return;
					}

					this.requestMap.put(player.getName().toLowerCase(), new Request(args[1].toUpperCase(), myGuilds));
					ThreadPool.run(() -> {
						try {
							TimeUnit.MINUTES.sleep(5);
						} catch (Exception e) {
						}

						if (this.requestMap.get(player.getName().toLowerCase()) == null) {
							return;
						}

						this.plugin.info(player, langUtils.getString(Messages.HYPHEN));
						this.plugin.info(player, langUtils.getString("Commands.Join.Request.Expired").replace("%NAME%", myGuilds.getGuildName()));
						this.plugin.info(player, langUtils.getString(Messages.HYPHEN));

						// 名前から検索しないと null になるよアホ
						UUID uniqueId = myGuilds.getGuild().
						this.plugin.info(uniqueId, langUtils.getString(Messages.HYPHEN));
						this.plugin.info(uniqueId, langUtils.getString("Commands.Join.Request.Owner-Expired").replace("%DISPLAYNAME%", myGuilds.getDisplayName()));
						this.plugin.info(uniqueId, langUtils.getString(Messages.HYPHEN));

						this.requestMap.put(player.getName().toLowerCase(), null);
					});

					this.plugin.info(player, langUtils.getString(Messages.HYPHEN));
					this.plugin.info(player, langUtils.getString("Commands.Join.Request.Sent").replace("%NAME%", myGuilds.getGuildName()));
					this.plugin.info(player, langUtils.getString(Messages.HYPHEN));
					return;
				}
				this.plugin.info(player, langUtils.getString("Commands.Join.Usage"));
				return;
			}

			if (args[0].equalsIgnoreCase("accept")) {
				if (args.length > 1) {
					Request targetGuilds = this.requestMap.get(args[1].toLowerCase());
					if (targetGuilds == null) {
						this.plugin.info(player, langUtils.getString(Messages.HYPHEN));
						this.plugin.info(player, langUtils.getString("Commands.Accept.NotSent"));
						this.plugin.info(player, langUtils.getString(Messages.HYPHEN));
						return;
					}
				}

				this.plugin.info(player, langUtils.getString(Messages.HYPHEN));
				this.plugin.info(player, langUtils.getString("Commands.Accept.Usage"));
				this.plugin.info(player, langUtils.getString(Messages.HYPHEN));
				return;
			}

			if (args[0].equalsIgnoreCase("leave")) {
				try {
					myGuilds.quitGuild();
					this.plugin.info(player, langUtils.getString(Messages.HYPHEN));
					this.plugin.info(player, langUtils.getString("Commands.Leave.Left"));
					this.plugin.info(player, langUtils.getString(Messages.HYPHEN));
				} catch (GuildNotJoinedException e) {
					this.plugin.info(player, langUtils.getString(Messages.HYPHEN));
					this.plugin.info(player, langUtils.getString("Commands.Leave.Not-Joined"));
					this.plugin.info(player, langUtils.getString(Messages.HYPHEN));
				}
				return;
			}